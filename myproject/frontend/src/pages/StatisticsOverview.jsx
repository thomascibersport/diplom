import React, { useState, useEffect } from "react";
import axios from "axios";
import Cookies from "js-cookie";
import StatCard from "../components/StatCard";
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
} from "recharts";

const StatisticsOverview = () => {
  const [stats, setStats] = useState(null);

  useEffect(() => {
    const fetchStats = async () => {
      try {
        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–≥–æ—Å—Ç—å), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
        const token = Cookies.get("token");
        const config = token
          ? { headers: { Authorization: `Bearer ${token}` } }
          : {};
        const response = await axios.get(
          "http://127.0.0.1:8000/api/statistics/",
          config
        );
        setStats(response.data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", error);
      }
    };
    fetchStats();
  }, []);

  if (!stats) {
    return <div className="text-center py-10">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</div>;
  }
  return (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4 text-gray-800 dark:text-gray-200">
        –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
      </h2>
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
        <StatCard
          title="–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏"
          value={`${stats.average_speed} –∫–º/—á`}
          icon="üöö"
          description="–í —Å—Ä–µ–¥–Ω–µ–º –ø–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º"
        />
        <StatCard
          title="–ß–∞—â–µ –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤"
          value={stats.most_delivered_region}
          icon="üåç"
          description="–†–µ–≥–∏–æ–Ω —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –¥–æ—Å—Ç–∞–≤–æ–∫"
        />
        <StatCard
          title="–°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç"
          value={`${stats.farthest_route.distance} –∫–º`}
          icon="üõ£Ô∏è"
        />
        <StatCard
          title="–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
          value={`${stats.fastest_delivery.duration}1:01 –º–∏–Ω`}
          icon="‚è±Ô∏è"
          description="–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏"
        />
        <StatCard
          title="–í—Å–µ–≥–æ –¥–æ—Å—Ç–∞–≤–æ–∫"
          value={stats.total_deliveries}
          icon="üì¶"
          description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫"
        />
        <StatCard
          title="–û–±—â–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ"
          value={`${stats.total_distance} –∫–º`}
          icon="üìè"
          description="–°—É–º–º–∞—Ä–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º"
        />
      </div>
      <div className="bg-white dark:bg-gray-800 p-4 rounded-lg shadow">
        <h3 className="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">
          –î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–æ–∫ –ø–æ –¥–Ω—è–º
        </h3>
        <ResponsiveContainer width="100%" height={300}>
          <LineChart
            data={stats.deliveries_chart}
            margin={{ top: 20, right: 30, left: 0, bottom: 0 }}
          >
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="day" />
            <YAxis />
            <Tooltip />
            <Line
              type="monotone"
              dataKey="count"
              stroke="#8884d8"
              strokeWidth={2}
            />
          </LineChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default StatisticsOverview;
